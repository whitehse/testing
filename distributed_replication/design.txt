* REQUEST operation
* op - operation/message
* s - request-number generated by the client

* PREPARE operation
* v - the view-number
* m - The client message, the client op and the client generated request
number
* n - The generated op-number
* k - The current commit-number

* PREPAREOK operation
* v - the view-number
* n - the op-number

* REPLY operation
* v - the view-number
* s - request-number generated by the client
* x - the result of the client request/operation

* COMMIT operations
* v - the view-number
* k - commit-number (commit-number must equal op-number)

* STARTVIEWCHANGE operation
* v - the new view

* STARTVIEWCHANGE operation
* v - view-number
* l - log
* v` - the view number of the latest view in which its status was normal
* n - op-number
* k - commit-number

* STARTVIEW operation
* v - view-number
* l - the new log
* n - op-number
* k - commit-number

* RECOVERY operation
* x - a nonce

* RECOVERYRESPONSE operation
* v - the replica's view-number
* x - the nonce sent in the RECOVERY operation
* l - the log if this replica is the primary, otherwise nil
* n - op-number  if this is the primary, otherwise nil
* k - the commit-number if this is the primary, otherwise nil
* j - this replica's index if it is the primary,otherwise nil

* GETSTATE operation
* v - view-number
* n' - the replica's op-number

* NEWSTATE operation
* v - view-number
* l - the log on this replica, after n'
* n - the replica's op-number
* k - the replica's commit-number

* RECONFIGURATION operation
* e - epoch-number
* s - The client's request number
* new-config

* STARTEPOCH operation
* e - The new epoch-number
* n - The op-number
* old-config
* new-config

* EPOCHSTARTED operation
* e - The new epoch-number
